name: PNPM vs NPM Install Performance Test (Blank Project)

on:
  push:
    branches:
      - main # 테스트할 브랜치명
  workflow_dispatch: # GitHub Actions 탭에서 수동 실행 가능

jobs:
  test-install-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show initial disk space
        run: df -h .

      # --- PNPM Installation Tests ---
      - name: Setup Node.js and PNPM Cache
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm" # pnpm 글로벌 스토어 캐싱 설정
          # cache-dependency-path: pnpm-lock.yaml # 선택 사항: lock 파일 변경 시 캐시 무효화

      # NEW STEP: Install pnpm globally AFTER setup-node
      # 이렇게 하면 setup-node가 캐시 복원 등을 마친 후 pnpm 명령을 사용할 수 있게 됩니다.
      - name: Install PNPM globally
        run: npm install -g pnpm
        # 또는 corepack enable && corepack prepare pnpm@latest --activate
        # 하지만 npm install -g pnpm 방식이 때로는 setup-node와 더 잘 통합될 수 있습니다.

      - name: PNPM Install - Run 1 (Simulate Cold Cache for node_modules)
        run: |
          echo "--- Running pnpm install (Run 1 - Cold node_modules) ---"
          rm -rf node_modules pnpm-lock.yaml package-lock.json
          # 이제 pnpm은 위 스텝에서 전역 설치되었으므로 corepack prepare는 필요 없을 수 있습니다.
          time pnpm install
          echo "--- Disk usage after PNPM Install Run 1 ---"
          du -sh node_modules
          echo "--- Total disk space after PNPM Install Run 1 ---"
          df -h .

      - name: PNPM Install - Run 2 (Simulate Warm Cache for PNPM store)
        run: |
          echo "--- Running pnpm install (Run 2 - Warm pnpm store) ---"
          rm -rf node_modules
          # corepack prepare 필요 없음
          time pnpm install
          echo "--- Disk usage after PNPM Install Run 2 ---"
          du -sh node_modules
          echo "--- Total disk space after PNPM Install Run 2 ---"
          df -h .

      - name: PNPM Install - Run 3 (Simulate Warm Cache for PNPM store)
        run: |
          echo "--- Running pnpm install (Run 3 - Warm pnpm store) ---"
          rm -rf node_modules
          # corepack prepare 필요 없음
          time pnpm install
          echo "--- Disk usage after PNPM Install Run 3 ---"
          du -sh node_modules
          echo "--- Total disk space after PNPM Install Run 3 ---"
          df -h .

      # --- NPM Installation Tests --- (이 부분은 변경 없음)
      - name: Setup Node.js (for NPM test - separate step is good practice)
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          # NPM 테스트 Job을 분리했다면 여기에 cache: 'npm' 설정 가능

      - name: NPM Install - Run 1 (Simulate Cold Cache)
        run: |
          echo "--- Running npm install (Run 1 - Cold cache simulation) ---"
          rm -rf node_modules package-lock.json pnpm-lock.yaml
          time npm install
          echo "--- Disk usage after NPM Install Run 1 ---"
          du -sh node_modules
          echo "--- Total disk space after NPM Install Run 1 ---"
          df -h .

      - name: NPM Install - Run 2
        run: |
          echo "--- Running npm install (Run 2 - NPM default cache) ---"
          rm -rf node_modules
          time npm install
          echo "--- Disk usage after NPM Install Run 2 ---"
          du -sh node_modules
          echo "--- Total disk space after NPM Install Run 2 ---"
          df -h .

      - name: NPM Install - Run 3
        run: |
          echo "--- Running npm install (Run 3 - NPM default cache) ---"
          rm -rf node_modules
          time npm install
          echo "--- Disk usage after NPM Install Run 3 ---"
          du -sh node_modules
          echo "--- Total disk space after NPM Install Run 3 ---"
          df -h .

      - name: Show final disk space
        run: df -h .
