name: PNPM vs NPM Install Performance Test (Blank Project)

on:
  push:
    branches:
      - main # 테스트할 브랜치명
  workflow_dispatch: # GitHub Actions 탭에서 수동 실행 가능

jobs:
  test-install-performance:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Show initial disk space
        run: df -h .

      # --- PNPM Installation Tests ---

      # NEW STEP: Install pnpm using a dedicated action BEFORE setup-node
      # This action ensures pnpm command is available and correctly configured for subsequent steps.
      - name: Install PNPM
        uses: pnpm/action-setup@v4
        with:
          version: latest # 또는 특정 버전 (예: 9)
          # run_install: false # setup-node와 함께 사용할 때는 여기서 바로 install 하지 않음

      - name: Setup Node.js and PNPM Cache
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "pnpm" # 이제 이 옵션이 제대로 동작할 것입니다.
          # cache-dependency-path: pnpm-lock.yaml # 선택 사항: lock 파일 변경 시 캐시 무효화

      # 아래 PNPM install 스텝들 안의 corepack prepare 명령어는 제거합니다.
      # pnpm/action-setup 액션이 pnpm을 설정해주기 때문에 불필요합니다.

      - name: PNPM Install - Run 1 (Simulate Cold Cache for node_modules)
        run: |
          echo "--- Running pnpm install (Run 1 - Cold node_modules) ---"
          rm -rf node_modules pnpm-lock.yaml package-lock.json
          time pnpm install
          echo "--- Disk usage after PNPM Install Run 1 ---"
          du -sh node_modules
          echo "--- Total disk space after PNPM Install Run 1 ---"
          df -h .

      - name: PNPM Install - Run 2 (Simulate Warm Cache for PNPM store)
        run: |
          echo "--- Running pnpm install (Run 2 - Warm pnpm store) ---"
          rm -rf node_modules
          time pnpm install
          echo "--- Disk usage after PNPM Install Run 2 ---"
          du -sh node_modules
          echo "--- Total disk space after PNPM Install Run 2 ---"
          df -h .

      - name: PNPM Install - Run 3 (Simulate Warm Cache for PNPM store)
        run: |
          echo "--- Running pnpm install (Run 3 - Warm pnpm store) ---"
          rm -rf node_modules
          time pnpm install
          echo "--- Disk usage after PNPM Install Run 3 ---"
          du -sh node_modules
          echo "--- Total disk space after PNPM Install Run 3 ---"
          df -h .

      # --- NPM Installation Tests --- (이 부분은 변경 없음)
      # NPM 테스트를 위해 별도의 setup-node 스텝을 두는 것이 좋습니다.
      - name: Setup Node.js (for NPM test)
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          # NPM 테스트 Job을 분리했다면 여기에 cache: 'npm' 설정 가능

      - name: NPM Install - Run 1 (Simulate Cold Cache)
        run: |
          echo "--- Running npm install (Run 1 - Cold cache simulation) ---"
          rm -rf node_modules package-lock.json pnpm-lock.yaml
          time npm install
          echo "--- Disk usage after NPM Install Run 1 ---"
          du -sh node_modules
          echo "--- Total disk space after NPM Install Run 1 ---"
          df -h .

      - name: NPM Install - Run 2
        run: |
          echo "--- Running npm install (Run 2 - NPM default cache) ---"
          rm -rf node_modules
          time npm install
          echo "--- Disk usage after NPM Install Run 2 ---"
          du -sh node_modules
          echo "--- Total disk space after NPM Install Run 2 ---"
          df -h .

      - name: NPM Install - Run 3
        run: |
          echo "--- Running npm install (Run 3 - NPM default cache) ---"
          rm -rf node_modules
          time npm install
          echo "--- Disk usage after NPM Install Run 3 ---"
          du -sh node_modules
          echo "--- Total disk space after NPM Install Run 3 ---"
          df -h .

      - name: Show final disk space
        run: df -h .
